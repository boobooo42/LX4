using LexicalAnalyzer.Interfaces;
using LexicalAnalyzer.Models;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System;

namespace LexicalAnalyzer.Controllers
{
    public class CorpusController : Controller
    {
        /* Private members */
        ICorpusContext m_context;

        /* Constructors */
        public CorpusController(ICorpusContext context) {
            m_context = context;
        }

        /// <summary>
        /// Get a list of corpora stored on the database
        /// </summary>
        [HttpGet("api/corpus")]
        public IEnumerable<Corpus> List()
        {
            return m_context.CorpusRepository.List(null);
        }

        /// <summary>
        /// Create a new corpus with the given name and description.
        /// </summary>
        /// <remarks>
        /// <p>
        /// The name and description are fluff for the user interface; in code,
        /// the corpus is usually referred to by the ID generated by the
        /// database.
        /// </p>
        /// <p>
        /// A corpus can be "locked" as a precaution to prevent any data from
        /// being added to or removed from that corpus. This feature is not
        /// implemented at this time.
        /// </p>
        /// <p>
        /// Note that the Id and Hsah are ignored in this call.
        /// </p>
        /// </remarks>
        [HttpPost("api/corpus")]
        public string Add([FromBody] Corpus corpus)
        {
            if (corpus == null) {
                /* The JSON sent was not in the correct format */
                Response.StatusCode = 400;  /* Bad Request */
                var error = new LexicalAnalyzer.Models.Error();
                error.Message = "Invalid structure for Corpus object";
                return JsonConvert.SerializeObject(error);
            }
            corpus.Id = -1;
            m_context.CorpusRepository.Add(corpus);
            return "success";
        }
    }
}
